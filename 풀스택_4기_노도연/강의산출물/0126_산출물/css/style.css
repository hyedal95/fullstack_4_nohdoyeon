#wrap{width: 100%;} /*  문서전체 너비 100% */ 
#wrap #header{
    width:100%;
    height:120px;
    background-color: #c99;
    text-align: center; /* 수평정렬 */
    /* font-size: 1rem; */ /* html root의 크기를 그대로 (상대크기 조정)*/
    /* font-size: 2.2em; */ /* 부모 요소의 글자 크기 기준으로 상대크기 조정 */
    font-size: 1.576458224vw; /* 창너비 크기에 반응하는 글자 크기를 기준으로 상대크기 vw */
    padding: 45px 0; /* 패딩 상하 글자 수직정렬 위아래 45 좌우 0 */
    color: #eee;
} /* 임시컬러 넣을 때는 백그라운드 컬러로 써서 넣을 예정 */

#wrap #main{width:100%; font-size: 30px;}
#wrap #main .section{
    width:100%;
    height: 100vh;/* vh란? 반응형의 단위이다. */
    /* font-size:5.254860746vh; */ /* 창높이에 반응하는 단위 vh지정 */
    font-size:5.254860746vw; /* 창너비에 반응하는 단위 vw지정 */
    /* font-size: 1.5em;  *//* 부모요소의 글자 크기를 상대크기로 지정  150%=1.5em  */
    text-align: center; 
    line-height: 100vh; /* 줄높이 창높이 글자 수직 가운데 정렬 */
    color: #ccc; 
} /* 세션9개를 공통스타일 지정 */


#wrap #main #section1{
    background-color: rgba(255,0,0,0.1); /* rgba(빨강,그린,파랑,투명도0~1 사이에서 조정) */
    line-height: 160%;
    font-size: 14px;
    height: auto; /* 내용에 따라 높이가 조정 */
    text-align: left;
    color: #333;
    padding: 80px 0;
} 
#wrap #main #section1 .container {
    width: 600px;
    margin: 0 auto;
} 
#wrap #main #section1 .container .content{
    width: 100%;
} 
#wrap #main #section1 .container .content h2{text-align: center;}  
#wrap #main #section1 .container .content p{padding: 10px 0 50px 0;}  /* 위 아래 10px 띄우고 좌우는 0 */ 

/* 같은 형제요소으므로 h2:nth-child(인덱스번호) p:nth-child(인덱스번호) */
/* h2 태그가 추가되면서 p 태그 인덱스번호가 바뀌었다. h2:nth-child(1) h2:nth-child(3) h2:nth-child(5) h2:nth-child(7) */
/* #wrap #main #section1 .container .content p:nth-child(2){text-align: left; padding: }  왼쪽 정렬 */
/* #wrap #main #section1 .container .content p:nth-child(4){text-align: right; padding: }  오른쪽 정렬 */
/* #wrap #main #section1 .container .content p:nth-child(6){text-align: center; padding: }  가운데 정렬  */
/* #wrap #main #section1 .container .content p:nth-child(8){text-align: justify; padding: 10px 0 0 0;}  양쪽 균등정렬 */

/* p태그 에서만 인덱스 지정하는 방법 */
#wrap #main #section1 .container .content p:nth-of-type(1){
    text-align: left; /* 왼쪽 정렬 */
    text-transform: uppercase; /* 영문모두 대문자(업퍼 케이스 uppercase) 변환 */
} 
#wrap #main #section1 .container .content p:nth-of-type(2){
    text-align: right; /* 오른쪽 정렬*/
    text-transform: lowercase; /* 영문모두 소문자(로우어 케이스 lowercase) 변환 */
}  
#wrap #main #section1 .container .content p:nth-of-type(3){
    text-align: center; /* 가운데 정렬*/ 
    text-transform: capitalize;/* 영문 문단시작 첫글자 대문자(캐피탈라이즈 capitalize) 변환 */
}  
#wrap #main #section1 .container .content p:nth-of-type(4){
    text-align: justify; padding: 10px 0 0 0; /* 양쪽 균등정렬 */
} 

#wrap #main #section2{
    background-color: rgba(255,255,255,1);
    line-height: 160%;
    font-size: 14px;
    height: auto; /* 내용에 따라 높이가 조정 */
    text-align: left;
    color: #333;
    padding: 80px 0;}
#wrap #main #section2 .container{width: 372px; margin: 0 auto;}
#wrap #main #section2 .container .title{padding: 0 0 40px 0;}
#wrap #main #section2 .container .title h2{font-size: 28px; font-weight: 700;}

#wrap #main #section2 .container .content{width: 100%;}
#wrap #main #section2 .container .content ul{width: 100%; }
#wrap #main #section2 .container .content ul li{width: 100%;
padding: 14px 16px;
border-top: 1px solid #ddd;
}
/* 마지막 줄은 아래쪽에 테두리 실선(solid) */
#wrap #main #section2 .container .content ul li:last-child{
    border-bottom: 1px solid #ddd;
}
/* 
a링크 태그는 인라인 태그 요소이므로 너비 높이를 설정할 수 없다. 
그래서 display: block;으로 블록태그요소로 변경한다.
 */
#wrap #main #section2 .container .content ul li a{
    width: 100%;
    display: block;
    white-space:nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
/* a링크에 마우스 올렸을 때 a:hover  글자 빨강 밑줄  */
#wrap #main #section2 .container .content ul li a:hover{
    color: red;
    text-decoration: underline;

}


#wrap #main #section3{
    background-color: rgba(255,0,255,0.1);
    line-height: 160%;
    font-size: 14px;
    height: auto; /* 내용에 따라 높이가 조정 */
    text-align: left;
    color: #333;
    padding: 80px 0;}
#wrap #main #section3 .container{
    width: 1900px;
    margin: 0 auto;
}
#wrap #main #section3 .container .title{
    padding: 0 0 40px 0;
}
#wrap #main #section3 .container .title h2{
    width: 100%;
    font-size: 28px;
    font-weight: 600;
    text-align: center;
}
#wrap #main #section3 .container .content{
    width: 100%;}
    /* 배경이미지 박스는 반드시 너비와 높이가 있어야 배경이미지가 보인다. */
#wrap #main #section3 .container .content .img-bg{
    width: 100%;
    height: 370px;
    /* 배경이미지 */
    background:#ccc url(../img/주황색.jpg) no-repeat 50% 50% ;
    /* background:배경색상 url(배경이미지경로와 파일) 반복여부 수평정렬 수직정렬 ; */
    /* 자식요소인 이미지박스를 플렉스 정렬 */
    display: flex; 
    justify-content: center; 
    align-items: center; 
}

#wrap #main #section3 .container .content .img-bg .text-box{ 
    color: #000;
    font-size: 100px;
    font-weight: 900;
    width: 80%;
    height: 185px; /* 부모박스 높이가 있어야 높이 백분율 사용된다. */
    background: rgba(255,255,255,0.8);
    margin: 0 auto;
    text-align: center;
    border-radius: 92.5px; /* 185/2 원의 반지름 */

    /* 자식요소인 text-박스를 플렉스 정렬 */
    display: flex; /* 플렉스 설정 해주기 */ 
    justify-content: center; /* 플렉스에서 수평정렬 */
    align-items: center; /* 플렉스에서 수직정렬 */

}


#wrap #main #section4{background-color: rgba(0,255,255,0.1);}
#wrap #main #section5{background-color: rgba(255,0,0,0.1);}
#wrap #main #section6{background-color: rgba(255,255,0,0.1);}
#wrap #main #section7{background-color: rgba(255,0,255,0.1);}
#wrap #main #section8{background-color: rgba(0,255,0,0.1);}
#wrap #main #section9{background-color: rgba(0,0,255,0.1);}

#wrap #footer{
    width:100% ;
    height: 100px;
    background-color:#f8f8f8 ; /* 임시배경색 */
    /* font-size: 50px; */
    font-size: 2.627430373vw; /* 창너비에 반응하는 단위 vw */ 
    color: #aaa; 
    text-align: center; /* 좌우정렬 */
    /* padding: 35px 0 35px 0; =상 우 하 좌 */
    padding: 35px 0; /*위아래 좌우 | flex배우기 전 수직정렬하고 싶으면 계산해서 패딩함 */
}

/* css에는 젠코딩이 없어서 직접 써줘야함. */
/* 왜 id냐? 줄 단위의 영역들은 id로 만들고 그 안에 클래스나 id로 구분해본다 */
/* id는 유일성(중복 불가능)/ 중복이 되는 것은 class */
/* id는 이름이 딱 하나만 들어간다. */
/* id는 지정된 이름 딱 1개 class는 1~다수개 쓸 수 있음 */